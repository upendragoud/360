/*
* Maturity Spectrum 360 tables
*/
CREATE TABLE ORGANIZATIONS (
 ORG_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_NAME TEXT NOT NULL,
 ACCOUNT_ID TEXT NOT NULL,
 BILLING_PLAN_ID INTEGER NOT NULL DEFAULT 0,
 ONBOARDED_DATETIME INTEGER NOT NULL,
 DOMAIN TEXT NOT NULL,
 IS_DELETED INTEGER NOT NULL DEFAULT 0,
 UNIQUE (ORG_NAME),
 FOREIGN KEY(BILLING_PLAN_ID) REFERENCES BILLING_PLANS(PLAN_ID)
);
CREATE TABLE RESOURCES (
 RESOURCE_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 RESOURCE_NAME TEXT NOT NULL,
 DESCRIPTION TEXT,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID)
);
CREATE TABLE USERS (
 USER_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 ROLE_ID INTEGER NOT NULL,
 USER_EMAIL TEXT NOT NULL,
 PASSWORD TEXT NOT NULL,
 VERIFIED INTEGER NOT NULL,
 IS_DELETED INTEGER NOT NULL DEFAULT 0,
 UNIQUE (USER_EMAIL),
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ROLE_ID)
);
CREATE TABLE USER_PROFILE (
 USER_PROFILE_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 USER_ID INTEGER NOT NULL,
 F_NAME TEXT NOT NULL,
 L_NAME TEXT NOT NULL,
 DESIGNATION TEXT NOT NULL,
 FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID)
);
CREATE TABLE ROLES (
 ROLE_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ROLE_NAME TEXT NOT NULL,
 PERMISSION_ID INTEGER NOT NULL,
 UNIQUE (ROLE_NAME),
 FOREIGN KEY(PERMISSION_ID) REFERENCES PERMISSIONS(PERMISSION_ID)
);
CREATE TABLE ASSESSMENTS (
 ASSESSMENT_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 RESOURCE_ID INTEGER NOT NULL,
 ASSESSOR_USER_ID INTEGER NOT NULL,
 MODEL_ID INTEGER NOT NULL,
 ASSESSMENT_DATE INTEGER NOT NULL,
 ASSESSMENT_TYPE INTEGER NOT NULL,
 IS_DELETED INTEGER NOT NULL,
 ASSESSMENT_STATUS INTEGER NOT NULL,
 FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID),
 FOREIGN KEY(ASSESSOR_USER_ID) REFERENCES USERS(USER_ID),
 FOREIGN KEY(MODEL_ID) REFERENCES MATURITY_FRAMEWORKS(MODEL_ID),
 FOREIGN KEY(ASSESSMENT_TYPE) REFERENCES ASSESSMENT_TYPES(ASSESSMENT_TYPE_ID),
 FOREIGN KEY(ASSESSMENT_STATUS) REFERENCES ASSESSMENT_STATUS(STATUS_ID)
);
CREATE TABLE ASSESSMENT_TYPES (
 ASSESSMENT_TYPE_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ASSESSMENT_TYPE_NAME TEXT NOT NULL, /* AI, INTERNAL(AEROAEGIS), SELF(ORG), EXTERNAL(HP, WIPRO ETC) */
 UNIQUE (ASSESSMENT_TYPE_NAME)
);
CREATE TABLE ASSESSMENT_DETAILS (
 DETAIL_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ASSESSMENT_ID INTEGER NOT NULL,
 QUESTION_ID INTEGER NOT NULL,
 SELECTED_OPTION_ID INTEGER NOT NULL,
 FOREIGN KEY(ASSESSMENT_ID) REFERENCES ASSESSMENTS(ASSESSMENT_ID),
 FOREIGN KEY(QUESTION_ID) REFERENCES ASSESSMENT_QUESTIONS(QUESTION_ID),
 FOREIGN KEY(SELECTED_OPTION_ID) REFERENCES ASSESSMENT_OPTIONS(OPTION_ID)
);
CREATE TABLE ASSESSMENT_QUESTIONS (
 QUESTION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 AREA_ID INTEGER NOT NULL,
 QUESTION_DESC TEXT NOT NULL,
 COMMENT TEXT,
 IS_DELETED INTEGER NOT NULL DEFAULT 0,
 FOREIGN KEY(AREA_ID) REFERENCES KNOWLEDGE_AREAS(AREA_ID),
 FOREIGN KEY(LEVEL_ID) REFERENCES MATURITY_LEVELS(LEVEL_ID)
);
CREATE TABLE ASSESSMENT_OPTIONS (
 OPTION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 QUESTION_ID INTEGER NOT NULL,
 OPTION_TEXT TEXT NOT NULL,
 SCORE REAL NOT NULL,
 FOREIGN KEY(QUESTION_ID) REFERENCES ASSESSMENT_QUESTIONS(QUESTION_ID)
);
CREATE TABLE ASSESSMENT_STATUS (
 STATUS_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 STATUS_NAME TEXT NOT NULL
);
CREATE TABLE RECOMMENDATION_STATUS (
 STATUS_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 STATUS_NAME TEXT NOT NULL
);
CREATE TABLE RECOMMENDATION_PRIORITIES (
    PRIORITY_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    PRIORITY_NAME TEXT NOT NULL
);
CREATE TABLE ASSESSMENT_RECOMMENDATIONS (
 RECOMMENDATION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 RECOMMENDATION_DESCRIPTION TEXT NOT NULL,
 IS_DELETED INTEGER NOT NULL DEFAULT 0,
 ASSESSMENT_ID INTEGER NOT NULL,
 FOREIGN KEY(ASSESSMENT_ID) REFERENCES ASSESSMENTS(ASSESSMENT_ID)
);
CREATE TABLE PRACTICE_TEAMS (
 TEAM_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 NAME TEXT NOT NULL,
 DESCRIPTION TEXT NOT NULL,
 CREATED_AT INTEGER NOT NULL,
 UPDATED_AT INTEGER NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID)
);
CREATE TABLE PRACTICE_TEAM_ASSIGNMENTS (
 ASSIGNMENT_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 TEAM_ID INTEGER NOT NULL,
 MODEL_ID INTEGER NOT NULL,
 CREATED_AT INTEGER NOT NULL,
 UPDATED_AT INTEGER NOT NULL,
 FOREIGN KEY(TEAM_ID) REFERENCES PRACTICE_TEAMS(TEAM_ID),
 FOREIGN KEY(MODEL_ID) REFERENCES MATURITY_FRAMEWORKS(MODEL_ID)
);
CREATE TABLE ASSESSMENT_TIMELINE (
 TIMELINE_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ASSESSMENT_ID INTEGER NOT NULL,
 RESOURCE_ID INTEGER NOT NULL,
 ASSESSMENT_DATE INTEGER NOT NULL,
 FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID),
 FOREIGN KEY(ASSESSMENT_ID) REFERENCES ASSESSMENTS(ASSESSMENT_ID)
);
CREATE TABLE BILLING (
 BILLING_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 PLAN_ID INTEGER NOT NULL,
 START_DATE INTEGER NOT NULL,
 END_DATE INTEGER NOT NULL,
 AMOUNT REAL NOT NULL,
 BILLING_DATE INTEGER NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(PLAN_ID) REFERENCES BILLING_PLANS(PLAN_ID)
);
CREATE TABLE TASK (
 TASK_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ASSIGNED_BY INTEGER NOT NULL,
 ASSIGNED_TO INTEGER NOT NULL,
 RECOMMENDATION_ID INTEGER NOT NULL,
 STATUS_ID INTEGER NOT NULL,
 DESCRIPTION TEXT NOT NULL,
 IS_DELETED INTEGER NOT NULL DEFAULT 0,
 CREATED_AT INTEGER NOT NULL,
 UPDATED_AT INTEGER NOT NULL,
 FOREIGN KEY(ASSIGNED_BY) REFERENCES USERS(USER_ID),
 FOREIGN KEY(ASSIGNED_TO) REFERENCES USERS(USER_ID),
 FOREIGN KEY(RECOMMENDATION_ID) REFERENCES RECOMMENDATIONS(REC_ID),
 FOREIGN KEY(STATUS_ID) REFERENCES TASK_STATUS(TASK_STATUS_ID)
);
CREATE TABLE HEATMAP (
 HEATMAP_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 RESOURCE_ID INTEGER NOT NULL,
 KNOWLEDGE_AREA_ID INTEGER NOT NULL,
 SCORE REAL NOT NULL,
 FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID),
 FOREIGN KEY(KNOWLEDGE_AREA_ID) REFERENCES KNOWLEDGE_AREAS(AREA_ID)
);
CREATE TABLE HEATMAP_DATA (
 DATA_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 RESOURCE_ID INTEGER NOT NULL,
 KNOWLEDGE_AREA_ID INTEGER NOT NULL,
 SCORE REAL NOT NULL,
 FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID),
 FOREIGN KEY(KNOWLEDGE_AREA_ID) REFERENCES KNOWLEDGE_AREAS(AREA_ID)
);
CREATE TABLE POLICIES (
 POLICY_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ROLE_ID INTEGER NOT NULL,
 DESCRIPTION TEXT NOT NULL,
 FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ROLE_ID)
);
CREATE TABLE ORG_METRICS (
 METRIC_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 MODEL_ID INTEGER NOT NULL,
 SCORE REAL NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(MODEL_ID) REFERENCES MATURITY_FRAMEWORKS(MODEL_ID)
);
CREATE TABLE RECOMMENDATION_IMPLEMENTATIONS (
 IMPLEMENTATION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 TASK_ID INTEGER NOT NULL,
 STATUS_ID INTEGER NOT NULL,
 IMPLEMENTATION_DATE INTEGER NOT NULL,
 IMPLEMENTED_BY_USER_ID INTEGER NOT NULL,
 FOREIGN KEY(TASK_ID) REFERENCES TASK(TASK_ID),
 FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID),
 FOREIGN KEY(IMPLEMENTED_BY_USER_ID) REFERENCES USERS(USER_ID)
);
CREATE TABLE BILLING_PLANS (
 PLAN_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 NAME TEXT NOT NULL,
 DESCRIPTION TEXT NOT NULL,
 MAX_FRAMEWORKS INTEGER NOT NULL,
 MAX_RESOURCES INTEGER NOT NULL,
 UNIQUE (NAME)
);
CREATE TABLE BILLING_PLAN_DETAILS (
 PLAN_DETAIL_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 PLAN_ID INTEGER NOT NULL,
 PLAN_DETAIL_TEXT TEXT NOT NULL,
 FOREIGN KEY(PLAN_ID) REFERENCES BILLING_PLANS(PLAN_ID)
);
CREATE TABLE ORG_BENCHMARKING (
 BENCHMARK_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 INDUSTRY_SCORE REAL NOT NULL,
 PEER_SCORE REAL NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID)
);
CREATE TABLE PEER_ORGS (
 PEER_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 PEER_ORG_ID INTEGER NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(PEER_ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID)
);
CREATE TABLE HISTORICAL_SCORES (
 HISTORY_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 RESOURCE_ID INTEGER NOT NULL,
 DATE INTEGER NOT NULL,
 SCORE REAL NOT NULL,
 FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID)
);
CREATE TABLE ORG_PAYMENTS (
 PAYMENT_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 PLAN_ID INTEGER NOT NULL,
 DATE INTEGER NOT NULL,
 AMOUNT REAL NOT NULL,
 TRANSACTION_ID INTEGER NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(PLAN_ID) REFERENCES BILLINGPLAN(PLAN_ID)
);
CREATE TABLE PERMISSIONS (
 PERMISSION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 NAME TEXT NOT NULL,
 DESCRIPTION TEXT NOT NULL
);
CREATE TABLE AI_RECOMMENDATIONS (
 RECOMMENDATION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 RESOURCE_ID INTEGER NOT NULL,
 REC_TEXT TEXT NOT NULL,
 DATE INTEGER NOT NULL,
 FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCES(RESOURCE_ID)
);

CREATE TABLE ORG_SUBSCRIPTIONS (
 SUBSCRIPTION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 PLAN_ID INTEGER NOT NULL,
 START_DATE INTEGER NOT NULL,
 END_DATE INTEGER NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(PLAN_ID) REFERENCES BILLING_PLANS(PLAN_ID)
);
CREATE TABLE TASK_STATUS (
 TASK_STATUS_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 TASK_STATUS_NAME TEXT NOT NULL,
 UNIQUE (TASK_STATUS_NAME)
);
CREATE TABLE ORG_PEER_COMPARISON (
 COMPARISON_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 PEER_ORG_ID INTEGER NOT NULL,
 COMPARISON_DATE INTEGER NOT NULL,
 METRIC_ID INTEGER NOT NULL,
 ORG_SCORE REAL NOT NULL,
 PEER_SCORE REAL NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(PEER_ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(METRIC_ID) REFERENCES ORG_METRICS(METRIC_ID)
);
CREATE TABLE TASK_UPDATES (
 UPDATED_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 TASK_ID INTEGER NOT NULL,
 UPDATED_BY INTEGER NOT NULL,
 UPDATE_TEXT TEXT NOT NULL,
 DATE INTEGER NOT NULL,
 FOREIGN KEY(TASK_ID) REFERENCES TASKS(TASK_ID)
);
CREATE TABLE SSO (
 ID INTEGER NOT NULL,
 ACCOUNT_ID INTEGER NOT NULL,
 IS_ACTIVE BOOLEAN,
 PROVIDER_NAME VARCHAR(50),
 SCOPE VARCHAR(500),
 CLIENT_ID VARCHAR(100),
 CLIENT_SECRET VARCHAR(100),
 AUTHORIZE_URL VARCHAR(250),
 AUTHORIZE_PARAMS TEXT,
 ACCESS_TOKEN_URL VARCHAR(250),
 PROFILE_URL VARCHAR(250),
 PROFILE_MAPPING TEXT,
 REDIRECT_URI VARCHAR(250),
 PRIMARY KEY (ID),
 UNIQUE (ACCOUNT_ID),
 UNIQUE (PROVIDER_NAME),
 FOREIGN KEY(ACCOUNT_ID) REFERENCES ORGANIZATIONS(ACCOUNT_ID)
);
CREATE TABLE PLUGINS (
 ID INTEGER NOT NULL,
 NAME VARCHAR(64) NOT NULL,
 VERSION VARCHAR(32) NOT NULL,
 AUTHOR VARCHAR(64),
 DESCRIPTION VARCHAR(256),
 PATH VARCHAR(256),
 IS_ACTIVE BOOLEAN,
 PRIMARY KEY (ID),
 UNIQUE (NAME)
);
CREATE TABLE WORKSHOPS (
 WID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 ORG_ID INTEGER NOT NULL,
 NAME TEXT NOT NULL,
 PRACTICE_TEAM INTEGER NOT NULL,
 CREATED_AT INTEGER NOT NULL,
 UPDATED_AT INTEGER NOT NULL,
 CREATED_BY INTEGER NOT NULL,
 FOREIGN KEY(ORG_ID) REFERENCES ORGANIZATIONS(ORG_ID),
 FOREIGN KEY(CREATED_BY) REFERENCES USERS(USER_ID)
);




CREATE TABLE NOTIFICATIONS (
 NOTIFICATION_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
 TO_USER INTEGER NOT NULL,
 FROM_USER INTEGER NOT NULL,
 NOTIFICATION_TITLE TEXT NOT NULL,
 NOTIFICATION_DESCRIPTION TEXT NOT NULL,
 NOTIFICATION_DATETIME INTEGER NOT NULL,
 IS_READ INTEGER NOT NULL,
 IS_DELETED INTEGER NOT NULL,
 FOREIGN KEY(FROM_USER) REFERENCES USERS(USER_ID),
 FOREIGN KEY(TO_USER) REFERENCES USERS(USER_ID)
);